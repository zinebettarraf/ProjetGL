	TSTO #0
	BOV pile_pleine
	ADDSP #0
; start main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Variables declarations:
; Beginning of main instructions:
	LOAD #4, R2
	MUL #5, R2
	LOAD R2, R2
	QUO #2, R2
	BOV op_overflow
	LOAD R2, R1
	WINT
	WNL
	LOAD #5, R2
	SUB #4, R2
	FLOAT R2, R2
	LOAD R2, R2
	LOAD #3, R3
	QUO #3, R3
	BOV op_overflow
	FLOAT R3, R3
	LOAD R3, R3
	MUL #0x1.8p2, R3
	BOV op_overflow
	ADD R3, R2
	BOV op_overflow
	LOAD R2, R2
	LOAD #0x1.0p0, R3
	FLOAT #2, R4
	MUL R4, R3
	BOV op_overflow
	SUB R3, R2
	BOV op_overflow
	LOAD R2, R1
	WFLOAT
	WNL
	HALT
; Error messages : stack
pile_pleine:
	WSTR "Erreur: overflow de la pile"
	WNL
	ERROR
; Error messages : operations
op_overflow:
	WSTR "Erreur: overflow pendant le calcul"
	WNL
	ERROR
io_error:
	WSTR "Error; Input/Output error"
	WNL
	ERROR
; Classes Definitions
init.Object:
	RTS
code.Object.equals:
	TSTO #1
	BOV pile_pleine
	PUSH R2
	LOAD -2(LB), R2
	CMP -3(LB), R2
	SEQ R0
	POP R2
	RTS
; end main program
